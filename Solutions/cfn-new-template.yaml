AWSTemplateFormatVersion: 2010-09-09
Description: |
  This CloudFormation Template was written for running Kittens Carousel Static Website on EC2. 
  Kittens Carousel Static Website will be deployed on Amazon Linux 2023 EC2 Instance with custom 
  security group which allows http connections on port 80 and ssh port 22 from anywhere. Kittens Carousel Static Website
  is downloaded from my Public Github repository, then deployed on Apache Web Server.
Parameters:
  imageID:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-x86_64'
  keyPair:
    Description: Please enter your key
    Type: AWS::EC2::KeyPair::KeyName
    Default: betulk 

  instanceType:
    Description: Choose your instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t3.micro
      - t2.large

  Resources:
    MyWebServer:
      Type: AWS::EC2::Instance
      Properties:
        ImageId: !Ref imageID
        InstanceType: !Ref instanceType
        KeyName: !Ref keyPair
        SecurityGroupIds: 
          - !Ref mySecGrp
        Tags: 
          Key: Name
          Value: !Sub ${AWS::StackName}
        UserData: !Base64 |
          #! /bin/bash 
          dnf update -y
          dnf install -y htppd
          chmod 77 /var/www/html
          cd /var/www/hatml
          dnf install git -y
          git clone https://github.com/betul-kaplan/101-kittens-carousel-static-website-ec2.git
          mv kittens-web-project/static-web/* .
          systemctl restart httpd
          systemctl enable httpd


  mySecGrp:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: ssh and http
      GroupName: osvaldo-kitten-project-scgrp
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0  
Outputs:    
  LogicalID:
    Description: URL of web site
    Value: !Sub 
      - http://${PublicDNS}
      - PublicDNS: !GetAtt MyWebServer.publicDnsName
          
       
  

  
